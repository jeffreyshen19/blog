import scroller from"/dist/JS/scrollytelling/scroller.js";var scrollVis=function(){const a={top:50,right:30,bottom:70,left:55},b=document.getElementById("vis").offsetWidth-a.left-a.right,c=document.getElementById("vis").offsetHeight-a.top-a.bottom;// Which visualization we currently are on
var d,e,f=-1,g=0,h=[],i=[],j=function(a){a.each(function(a){k(a),l()})},k=function(f){e=f.histogramData;// Add histogram
var g=d3.select("#graph").append("svg").attr("width",b+a.left+a.right).attr("height",c+a.top+a.bottom).append("g").attr("transform","translate("+a.left+","+a.top+")"),h=d3.scaleLinear().domain([0,50]).range([0,b]);// Add X Axis
g.append("g").attr("class","x axis").attr("transform","translate(0,"+c+")").call(d3.axisBottom(h).tickFormat(a=>a+"%")),g.append("text").attr("transform",`translate(${b/2},${c+40})`).style("text-anchor","middle").style("font-family","IBMPlexSans").style("font-size",16).text("Percent of Census Tract Area Covered By Tree Canopy"),d=d3.histogram().value(function(a){return a})// I need to give the vector of value
.domain(h.domain())// then the domain of the graphic
.thresholds(h.ticks(25));// then the numbers of bins
// And apply this function to data to get the bins
var i=d(f.histogramData[0]);// Add median
g.append("text").attr("class","median-text").style("text-anchor","middle").style("font-family","IBMPlexSans").style("font-size",14),g.append("polygon").attr("class","median-arrow").style("fill","#24252a"),g.append("line").attr("class","median-line").attr("y1",0).attr("y2",c).style("stroke","#24252a").style("stroke-width",1).style("stroke-dasharray","4"),g.append("g").attr("class","y axis"),g.append("text").attr("transform","rotate(-90)").attr("y",0-a.left).attr("x",0-c/2).attr("dy","1em").style("text-anchor","middle").style("font-family","IBMPlexSans").style("font-size",16).text("Number of Census Tracts"),g.selectAll("rect").data(i).enter().append("rect").style("fill","#4e54c8")},l=function(){h[0]=function(){},i[0]=function(){}};// return chart function
return j.activate=function(a){g=a;var b=0>g-f?-1:1,c=d3.range(f+b,g+b,b);c.forEach(function(a){h[a]()}),f=g},j.update=function(a,b){i[a](b)},j};// Load data, then display
d3.json("/data/la-shade/census-tracts-2012.geojson").then(function(a){// Process data
let b=[[],[],[]];// Store the tree canopy cover, broken down by the median income of census tracts (lower, middle, upper income)
return a.features.forEach(function(a){let c=parseFloat(a.properties["TREE-PCT"]),d=parseInt(a.properties["median-income"]);isNaN(c)||isNaN(d)||(42e3>=d?b[0].push(c):125e3>=d?b[1].push(c)://Middle income
b[2].push(c))}),{geojson:a,histogramData:b}}).then(function(a){var b=scrollVis();d3.select("#vis").datum(a).call(b);var c=scroller().container(d3.select("#scrolling-vis"));c(d3.selectAll(".step")),c.on("active",function(a){d3.selectAll(".step").classed("active",function(b,c){return c===a}).style("opacity",function(b,c){return c===a?1:.1}),b.activate(a)}),c.on("progress",function(a,c){b.update(a,c)})}).catch(function(a){// handle error here
console.log(a)});