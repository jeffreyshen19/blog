import scroller from"/dist/JS/scrollytelling/scroller.js";var scrollVis=function(){function a(a){a.setStyle({fillColor:"none",opacity:0})}function b(a,b){a.setStyle({fillColor:b,opacity:1})}function c(a){o[a].forEach(function(a){a.setOpacity(0),a.closeTooltip()})}function d(a){o[a].forEach(function(a){a.setOpacity(1),a.openTooltip()})}function e(a,c,d,e){a.eachLayer(function(a){if(c(a))return!1!=d&&h.fitBounds(a.getBounds(),{duration:.5}),b(a,"blue"),void(e&&e(a))})}function f(b,c,d){b.eachLayer(function(b){c(b)&&(!1!=d&&h.fitBounds(b.getBounds(),{duration:.5}),a(b))})}function g(){let b=d3.select("#dropdown").property("value"),c=d3.select("input[name=\"show-control\"]:checked").node().value;for(let b=0;4>b;b++)a(m[b]);""==b?d3.select("#population").text("N/A"):(null==n[b].identifiers[3][1]?(3==c&&(c=0,d3.select("input[name=\"show-control\"]:checked").node().checked=null,d3.select("#city-boundary").node().checked=!0),d3.select("#csa").attr("disabled",!0),d3.select("#csa").select("input").attr("disabled",!0),d3.select("#csa").select("label").style("opacity",1)):(d3.select("#csa").attr("disabled",null),d3.select("#csa").select("input").attr("disabled",null),d3.select("#csa").select("label").style("opacity",0)),e(m[c],function(a){return a.feature.properties[n[b].identifiers[c][0]]===n[b].identifiers[c][1]},!0,function(a){let b=a.feature.properties.respop72018;d3.select("#population").text(d3.format(".3s")(b))}))}// return chart function
// Which visualization we currently are on
var h,i=-1,j=0,k=[],l=[],m=[];let n,o=[[[[34.0218948,-118.498265],"Santa Monica"],[[34.0825832,-118.4170435],"Beverly Hills"],[[33.8932864,-118.2393202],"Compton"]],[[[34.0115278,-118.1798982],"East Los Angeles"]],[[[33.8340569,-117.8805115],"Disneyland!"],[[34.137662,-118.1274577],"Caltech"]],[[[34.0432117,-118.2587082],"Downtown L.A."]],[[[34.3023856,-119.3888723],"Ventura"]]];/**
   * chart
   *
   * @param selection - the current d3 selection(s)
   *  to draw the visualization in. For this
   *  example, we will be drawing it in #vis
   */var p=function(a){a.each(function(a){q(a[0],a[1],a[2],a[3],a[4]),r()})},q=function(b,c,d,e,f){n=f,h=L.map("map",{zoomControl:!1,scrollWheelZoom:!1,doubleClickZoom:!1,dragging:!1}),L.tileLayer("https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png",{attribution:"&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>",subdomains:"abcd"}).addTo(h),m[0]=L.geoJSON(b),m[1]=L.geoJSON(c),m[2]=L.geoJSON(d),m[3]=L.geoJSON(e);for(let g=0;g<m.length;g++)a(m[g]),m[g].addTo(h);//Add markers
o=o.map(function(a){return a.map(function(a){return a=L.marker(a[0],{opacity:0}).bindTooltip(a[1],{direction:"top",className:"label"}).addTo(h),a.closeTooltip(),a})}),d3.select("#dropdown").selectAll(".option").data(f).enter().append("option").attr("class","option").attr("value",(a,b)=>b).text((a,b)=>b+1+". "+a.name),d3.select("#dropdown").on("change",g),d3.selectAll("input[name='show-control']").on("change",g)},r=function(){k[0]=function(){a(m[0]),h.setView([33.9490603,-118.0994376],10)},l[0]=function(){},k[1]=function(){e(m[0],function(a){return"Los Angeles"==a.feature.properties.NAME}),c(0)},l[1]=function(){},k[2]=function(){d(0),c(1),e(m[0],function(a){return"Los Angeles"==a.feature.properties.NAME})},l[2]=function(){},k[3]=function(){d(1),c(2),e(m[0],function(a){return"Los Angeles"==a.feature.properties.NAME}),f(m[1],function(a){return"51445"===a.feature.properties.GEOID10},!1)},l[3]=function(){},k[4]=function(){c(1),c(3),d(0),d(2),f(m[0],function(a){return"Los Angeles"==a.feature.properties.NAME},!1),e(m[1],function(a){return"51445"===a.feature.properties.GEOID10})},l[4]=function(){},k[5]=function(){c(0),c(2),d(3),e(m[1],function(a){return"51445"===a.feature.properties.GEOID10})},l[5]=function(){},k[6]=function(){e(m[1],function(a){return"51445"===a.feature.properties.GEOID10}),f(m[2],function(a){return"31080"===a.feature.properties.GEOID},!1)},l[6]=function(){},k[7]=function(){f(m[1],function(a){return"51445"===a.feature.properties.GEOID10},!1),e(m[2],function(a){return"31080"===a.feature.properties.GEOID})},l[7]=function(){},k[8]=function(){e(m[2],function(a){return"31080"===a.feature.properties.GEOID}),f(m[3],function(a){return"348"===a.feature.properties.GEOID},!1)},l[8]=function(){},k[9]=function(){f(m[2],function(a){return"31080"===a.feature.properties.GEOID},!1),e(m[3],function(a){return"348"===a.feature.properties.GEOID}),c(4)},l[9]=function(){},k[10]=function(){d(4)},l[10]=function(){},k[11]=function(){d(3),c(4);let a=d3.select("#dropdown").property("value"),b=d3.select("input[name=\"show-control\"]:checked").node().value;""!=a&&f(m[b],function(c){return c.feature.properties[n[a].identifiers[b][0]]===n[a].identifiers[b][1]},!1),e(m[3],function(a){return"348"===a.feature.properties.GEOID})},l[11]=function(){},k[12]=function(){c(3),g()},l[12]=function(){}};// Creates initial elements for all visualizations
return p.activate=function(a){j=a;var b=0>j-i?-1:1,c=d3.range(i+b,j+b,b);c.forEach(function(a){k[a]()}),i=j},p.update=function(a,b){l[a](b)},p};// Load data, then display
Promise.all([d3.json("/data/metropolitan-areas/cities.geojson"),d3.json("/data/metropolitan-areas/urban-areas.geojson"),d3.json("/data/metropolitan-areas/msa.geojson"),d3.json("/data/metropolitan-areas/csa.geojson"),d3.json("/data/metropolitan-areas/city-metadata.json")]).then(function(a){var b=scrollVis();d3.select("#vis").datum(a).call(b);var c=scroller().container(d3.select("#scrolling-vis"));c(d3.selectAll(".step")),c.on("active",function(a){d3.selectAll(".step").classed("active",function(b,c){return c===a}).style("opacity",function(b,c){return c===a?1:.1}),b.activate(a)}),c.on("progress",function(a,c){b.update(a,c)})}).catch(function(){// handle error here
});