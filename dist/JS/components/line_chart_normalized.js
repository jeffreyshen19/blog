function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}import LineChart from"/dist/JS/components/line_chart.js";import NormalizeHeader from"/dist/JS/components/subcomponents/normalize.js";const e=React.createElement;class LineChartNormalized extends React.Component{constructor(a){super(a),this.state={loaded:!1,yvar:"total-quantity",normalize:"none"},this.onYVarChanged=this.onYVarChanged.bind(this),this.onNormalizeChanged=this.onNormalizeChanged.bind(this)}componentDidMount(){this.props.chart=d3.select(this.props.chart).select(".line-chart").node(),this.setState({loaded:!0})}onYVarChanged(a){this.setState({yvar:a.currentTarget.value})}onNormalizeChanged(a){this.setState({normalize:a.currentTarget.value})}render(){return React.createElement("div",null,React.createElement(NormalizeHeader,{yvar:this.state.yvar,normalize:this.state.normalize,yVarHandler:this.onYVarChanged,normalizeHandler:this.onNormalizeChanged,id:"2"}),React.createElement("div",{class:"line-chart"},this.state.loaded?React.createElement(LineChart,_extends({},this.props,{ycols:this.state.yvar,ylabel:"total-cost"==this.state.yvar?"Total Cost":"Total Quantity",linelabels:"total-cost"==this.state.yvar?"Total Cost":"Total Quantity",yaxisformat:"total-cost"==this.state.yvar?"$.2s":".2s",title:("total-cost"==this.state.yvar?"Cost":"Quantity")+" of Items Acquired, Over Time"})):null))}}// Render all line charts
let elements=document.getElementsByClassName("line-chart-normalized");for(let a=0;a<elements.length;a++)ReactDOM.render(e(LineChartNormalized,{...elements[a].dataset,chart:elements[a]}),elements[a]);