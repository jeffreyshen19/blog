function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}import Chart from"/dist/JS/components/chart.js";const e=React.createElement;class BoxPlot extends React.Component{constructor(a){super(a)}xScale(a,b){// Returns the scale the x axis should use
return d3.scaleLinear()}yScale(a,b){// Returns the scale the y axis should use
return d3.scaleBand()}parseXCol(a){return a}xAxisFormat(a,b){b.tickFormat(d3.format(".2s")),700>a&&b.ticks(4)}renderData(a,b,c,e,d,f){let g=f.data,h=f.dataset,i=f.chart,j=h.fivenum.split(",");d.selectAll("g.box").data(g).enter().append("g").attr("class","box").attr("transform",function(a){return"translate("+c(a[j[2]])+","+(e(a[h.xcol])+30)+")";//TODO
}).each(function(a){d3.select(this).append("line").attr("class","range").attr("x1",c(a[j[4]])-c(a[j[2]])).attr("x2",c(a[j[0]])-c(a[j[2]])).attr("y1",0).attr("y2",0).style("stroke","black").style("stroke-width","4px"),d3.select(this).append("line").attr("class","max").attr("x1",c(a[j[4]])-c(a[j[2]])).attr("x2",c(a[j[4]])-c(a[j[2]])).attr("y1",-10).attr("y2",10).style("stroke","black").style("stroke-width","4px"),d3.select(this).append("line").attr("class","min").attr("x1",c(a[j[0]])-c(a[j[2]])).attr("x2",c(a[j[0]])-c(a[j[2]])).attr("y1",-10).attr("y2",10).style("stroke","black").style("stroke-width","4px"),d3.select(this).append("rect").attr("class","range").attr("x",c(a[j[1]])-c(a[j[2]])).attr("y",-10).attr("height",20).attr("width",c(a[j[3]])-c(a[j[1]])).style("fill","white").style("stroke","black").style("stroke-width","2px"),d3.select(this).append("line").attr("x1",0).attr("x2",0).attr("y1",-10).attr("y2",10).style("stroke","darkgray").style("stroke-width","4px")})}setXDomain(a,b){var c=b.fivenum.split(",")[4],d=d3.max(a,function(a){return+a[c]});return[0,d]}setYDomain(a,b){return a.map(function(a){return a[b.xcol]})}render(){return React.createElement(Chart,_extends({},this.props,{margin:{top:5,right:20,bottom:20,left:130},padding:{top:40,right:20,bottom:40,left:20},xScale:this.xScale,yScale:this.yScale,parseXCol:this.parseXCol,xAxisFormat:this.xAxisFormat,renderData:this.renderData,setXDomain:this.setXDomain,setYDomain:this.setYDomain,disableTooltip:!0}))}}// Render all bar charts
let elements=document.getElementsByClassName("box-plot");for(let a=0;a<elements.length;a++)ReactDOM.render(e(BoxPlot,{...elements[a].dataset,chart:elements[a]}),elements[a]);